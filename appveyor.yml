version: 1.0.{build}
branches:
  only:
  - appveyor
  - gl-happy
image: Unstable
environment:
  WHEEL_DIR: C:\kivy_wheels
  KIVY_BUILD_DIR: C:\kivy_build
  AIRPLANE_CHARGE:
    secure: +uoVGbtMLNGC5M65CCkHpWJ2/M9KsAEPf8ncHWQ1We7sQaITsp3dpFCqi8bX38PvQPSCS+C3ZuVZIbaUXPxO1owibcv+1gxdATOUfVVF/JrTFwgauCH4LKy3jSJp0tYxL4FrOTEtUsHznmBjewHnkbKXx8cMMSLx9+FgQfUAjttjV3/mESNwbRVdFck2m4qSZfqVceRZKewjXsABO3JH0pQyWr9LdnWpJbSdVsp2a9uy4Q8QTUqWI5yj7QvPOQAT1HBNXm0xjOcnxQPZqa4DDtJWsHheVIlXWv+yvOUHb3kzZi8qXh7mGLowoia3Z6ZqWAYob3FWmFBMQg6RD+Z0M+VAnnaj3yvTicdroEAmnQE2XzRZV/saobjgzf2KENT7O8ymQwXc0Rz1NJAiLWvzYSZGQ61xJCclw+Ynk09AwdnrbmVaa/AHIQBp67CNsXcdt4VDz9pb7TzP2ZwwYVzTPOLP1NEpYxZJOXroaKPnlOnWoKNCjTQ05uFlPjufHSPGtZcDtub22A4+i9yHrxg52wfdmk+g9PB7Oykq4eali2HKb8eJwsHp95GXNFcU/MAxg7PIRfwNzMmt/iR4UOy9dPmBGDA+bwUaiBTg8GsxrybjzK9bfGrdKvaXmHHKOaBaN11RZ1qKlBXjZ6HS93Qiry3aWOrNF3ML9St7rit1/Kccd46RI57X2e2YoAsJdQ/3l9e4rlX2rHsnCsNifKzn+7p+5qDGPWxWEDdQpANzxzQ2Q98SnW5xfzYPJgxmoBpndM0PasgJoYtc/Y5s8z2b7NE+QKhckN4QRb42zOgh1jPnLydXBQkXKJU60YI2ZOwjT1JTxrh/2nlzoYFUnKUMcRkFIMb73234Vbj+r7f1cBm/csbzseoSLbmLwAn1dBMeQUHLpzJ8dO5C+Be9s0rfqxAt77jw0zX4PeiTtbEuMM7OwENeBlv6igvEh1/7CrLl0e8d6K8D1samG3MXT3dFMwLXiIjupU8qoJjlMWEDkXXAxWMG/WQ0mdI6wio1XveCsKZJlmSSbTC3dstsRV0FvHL0jSr0HKNtv/MqwTOVmGyYNJSWw1GJh7wtiVRmZzRqoL1zKQMhyibot/w3i6r0k3bg9xW1J0Y9SdJrE5zRNYBTBbRHd+PE2UZjY0KKT5RInUKK+UtFfaAIrChGM8bYSobfdjr1eC+vPW4ToKiUCtCB6av4pw90sgUVUNe3IS0WTttYR1wzlG1TCaZ2V1dh77A/xnuZ1rHqEvkdhCHz9fgOs81Pxcttzwdgcab6a5DC1zKKWSN1LpoginjRqtZy1A==
  GDRIVE_CLIENT_ID:
    secure: YveQ/6qU0u9IxPifp/1nn3EXB5exgSMJjPCgrFeiGCL0F8eCEZCCFYnJR7B5Mu7DC3HP28vuozky4y8z/qlifUCRL0un/3+9H2AcSnPMs1A=
  GDRIVE_CLIENT_SECRET:
    secure: jQVAqlWZq5IL/kchbABd7vYZ1JCz9Yq7uozFxFGtjC8=
  GDRIVE_KIVY_UPLOAD_ID: 0B1_HB9J8mZepOV81UHpDbmg5SWM
  GDRIVE_GST_ID: 0B1_HB9J8mZepNzZ5aW91Q0tJU2s
  USE_SDL2: 1
  USE_GSTREAMER: 1
  KIVY_USE_SETUPTOOLS: 1
  matrix:
  - PYVER: 35
    BITTNESS: 86
    COMPILER: msvc
  - PYVER: 27
    BITTNESS: 86
  - PYVER: 34
    BITTNESS: 86
  - PYVER: 27
    BITTNESS: 64
  - PYVER: 34
    BITTNESS: 64
  - PYVER: 35
    BITTNESS: 64
    COMPILER: msvc
install:
- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-desktop.ps1'))
build_script:
- ps: >-
    function Check-Error

    {
      param([int]$SuccessVal = 0)
      if ($SuccessVal -ne $LastExitCode) {
        throw "Failed with exit code $LastExitCode"
      }
    }


    echo "Bitness=$env:BITTNESS, scheduled=$env:APPVEYOR_SCHEDULED_BUILD, forced=$env:APPVEYOR_FORCED_BUILD, rebuild=$env:APPVEYOR_RE_BUILD, tagged=$env:APPVEYOR_REPO_TAG"


    cd $env:APPVEYOR_BUILD_FOLDER

    git clone -q --branch=master https://github.com/kivy/kivy-sdk-packager.git C:\projects\kivy-sdk-packager

    Check-Error


    $PYTHONPATH = "$env:APPVEYOR_BUILD_FOLDER;$PYTHONPATH"

    echo "Build folder: $env:APPVEYOR_BUILD_FOLDER. Wheel folder: $env:WHEEL_DIR."

    mkdir "$env:KIVY_BUILD_DIR"

    Check-Error

    mkdir "$env:WHEEL_DIR"

    Check-Error


    C:\Python27\Scripts\pip.exe install pydrive

    Check-Error



    if ($env:BITTNESS -eq "64") {
      $PYTHON_ROOT = "C:\Python$env:PYVER-x64"
      $WHELL_BITNESS = "win_amd64"
    } else {
      $PYTHON_ROOT = "C:\Python$env:PYVER"
      $WHELL_BITNESS = "win32"
    }

    $env:PATH = "$PYTHON_ROOT;$PYTHON_ROOT\Scripts;$env:PATH;C:\Program Files\7-Zip"


    $WHEEL_DATE = python -c "from time import strftime;print(strftime('%d%m%Y'))"

    Check-Error

    $GIT_TAG = git rev-parse --short HEAD

    Check-Error

    python -c "import kivy"

    Check-Error

    $WHEEL_VERSION = python -c "import kivy;print(kivy.__version__)" --config "kivy:log_level:error"

    Check-Error

    python -c "import sys;print('Python version is {}'.format(sys.version))"

    Check-Error


    $env:DO_TEST = "True"

    if ($env:APPVEYOR_SCHEDULED_BUILD -eq "True"){
      $env:DO_TEST = "False"
    }


    $DO_WHEEL = "True"

    if ($env:APPVEYOR_REPO_TAG -eq "true"){
      $WHEEL_NAME = "-cp"
    } elseif ($env:APPVEYOR_SCHEDULED_BUILD -eq "True" -or $env:APPVEYOR_FORCED_BUILD -eq "True" -or $env:APPVEYOR_RE_BUILD -eq "True"){
      $WHEEL_NAME = "_$WHEEL_DATE`_git_$GIT_TAG-cp"
    } else {
      $DO_WHEEL = "False"
    }

    if ($env:APPVEYOR_REPO_BRANCH -ne "master") {
      $DO_WHEEL = "False"
    }

    echo "test=$env:DO_TEST, make_wheel=$DO_WHEEL"


    if (($env:DO_TEST -eq "True" -or $DO_WHEEL -eq "True") -and $env:PYVER -ne "35") {
      python -c "with open(r'$PYTHON_ROOT\Lib\distutils\distutils.cfg', 'wb') as fh: fh.write(b'[build]\ncompiler = mingw32\n')"
      Check-Error
      python -m pip install pip wheel setuptools --upgrade
      Check-Error
      pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy
      Check-Error
      pip install mock cython pygments docutils nose kivy.deps.glew_dev kivy.deps.glew kivy.deps.gstreamer_dev kivy.deps.gstreamer kivy.deps.sdl2_dev kivy.deps.sdl2 --extra-index-url http://kivy.org/downloads/packages/simple/ --trusted-host kivy.org
      Check-Error

      Copy-Item "$PYTHON_ROOT\Lib\site-packages\kivy\deps\*" -destination "$env:APPVEYOR_BUILD_FOLDER\kivy\deps" -recurse
      Remove-Item "$PYTHON_ROOT\Lib\site-packages\kivy" -Force -Recurse
      Remove-Item "$PYTHON_ROOT\Lib\site-packages\kivy.deps.*nspkg.pth"

      python setup.py build_ext --inplace
      Check-Error
    } else {
      $py35="C:\py35"
      if ($env:BITTNESS -eq "64") {
        $sdl2_url = "0B-080DPVLKs2cWZXRXhGSXZqYmM"
        $sdl2_dev_url = "0B-080DPVLKs2QVZ6QUlTQjlwamM"
        $glew_url = "0B-080DPVLKs2UkdqTUZWZmdvRXc"
        $glew_dev_url = "0B-080DPVLKs2Q09zVnVjYngtX0E"
        $sdl2_file = $py35+"\kivy.deps.sdl2-0.1.13-cp35-cp35m-win_amd64.whl"
        $sdl2_dev_file = $py35+"\kivy.deps.sdl2_dev-0.1.13-cp35-cp35m-win_amd64.whl"
        $glew_file = $py35+"\kivy.deps.glew-0.1.5-cp35-cp35m-win_amd64.whl"
        $glew_dev_file = $py35+"\kivy.deps.glew_dev-0.1.5-cp35-cp35m-win_amd64.whl"
      } else {
        $sdl2_url = "0B-080DPVLKs2TGg0SXcwX1p1OHc"
        $sdl2_dev_url = "0B-080DPVLKs2bjIyVDN3S0c0c0U"
        $glew_url = "0B-080DPVLKs2dkdoS2t1cU9PZmc"
        $glew_dev_url = "0B-080DPVLKs2QUZZNDNvem9meU0"
        $sdl2_file = $py35+"\kivy.deps.sdl2-0.1.13-cp35-cp35m-win32.whl"
        $sdl2_dev_file = $py35+"\kivy.deps.sdl2_dev-0.1.13-cp35-cp35m-win32.whl"
        $glew_file = $py35+"\kivy.deps.glew-0.1.5-cp35-cp35m-win32.whl"
        $glew_dev_file = $py35+"\kivy.deps.glew_dev-0.1.5-cp35-cp35m-win32.whl"
      }
      Check-Error
      mkdir "$py35"
      Check-Error
      git clone -q --branch=feature-gl-backend https://github.com/kivy/kivy.git C:\projects\kivy_temp
      Check-Error
      Check-Error
      (new-object net.webclient).DownloadFile("https://docs.google.com/uc?id="+$sdl2_url, $sdl2_file)
      Check-Error
      (new-object net.webclient).DownloadFile("https://docs.google.com/uc?id="+$sdl2_dev_url, $sdl2_dev_file)
      Check-Error
      (new-object net.webclient).DownloadFile("https://docs.google.com/uc?id="+$glew_url, $glew_file)
      Check-Error
      (new-object net.webclient).DownloadFile("https://docs.google.com/uc?id="+$glew_dev_url, $glew_dev_file)
      Check-Error
      cmd /c '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"&set' |
      foreach {
        if ($_ -match "=") {
          $v = $_.split("="); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])"
        }
      }
      Check-Error
      write-host "`nMSVC variables set."
      $env:MSSdk=1
      $env:USE_SDL2=1
      $env:USE_GSTREAMER=0
      $env:DISTUTILS_USE_SDK=1
      $env:LIB=$PYTHON_ROOT+"\libs;"+$env:LIB
      $env:INCLUDE=$PYTHON_ROOT+"\include;"+$env:INCLUDE
      (new-object net.webclient).DownloadFile("https://patch-diff.githubusercontent.com/raw/kivy/kivy/pull/4698.patch", "C:\projects\kivy_temp\mismatch.patch")
      cd "C:\projects\kivy_temp"
      git apply "mismatch.patch"


      python -m pip install pip wheel setuptools --upgrade
      Check-Error
      pip install mock cython pygments docutils nose $sdl2_file $sdl2_dev_file $glew_file $glew_dev_file
      Check-Error

      Copy-Item "$PYTHON_ROOT\Lib\site-packages\kivy\deps\*" -destination "C:\projects\kivy_temp\kivy\deps" -recurse
      Remove-Item "$PYTHON_ROOT\Lib\site-packages\kivy" -Force -Recurse
      Remove-Item "$PYTHON_ROOT\Lib\site-packages\kivy.deps.*nspkg.pth"

      python setup.py build_ext --inplace
      Check-Error
    }

    if ($DO_WHEEL -eq "True") {
      python setup.py bdist_wheel -d "$env:WHEEL_DIR"
      Check-Error

      $WHEEL_FNAME = python -c "from os import listdir;print(listdir(r'$env:WHEEL_DIR')[0])"
      Check-Error
      echo "Copying $env:WHEEL_DIR\$WHEEL_FNAME to $env:WHEEL_DIR\nightly-$WHEEL_FNAME"
      Copy-Item "$env:WHEEL_DIR\$WHEEL_FNAME" "$env:WHEEL_DIR\nightly-$WHEEL_FNAME"
      Check-Error
      $NEW_WHEEL_FNAME = python -c "print('$WHEEL_FNAME'.replace('-cp', '$WHEEL_NAME', 1))"
      Check-Error
      if ($WHEEL_FNAME -ne $NEW_WHEEL_FNAME) {
        echo "Renaming from $WHEEL_FNAME to $NEW_WHEEL_FNAME"
        Rename-Item "$env:WHEEL_DIR\$WHEEL_FNAME" "$NEW_WHEEL_FNAME"
        Check-Error
      }

      C:\Python27\python.exe C:\projects\kivy-sdk-packager\win\gdrive.py upload "$env:GDRIVE_KIVY_UPLOAD_ID" "$env:WHEEL_DIR\*"
      Check-Error

      C:\Python27\python.exe C:\projects\kivy-sdk-packager\win\gdrive.py delete_older "$env:GDRIVE_KIVY_UPLOAD_ID" "15"
      Check-Error
    }
test_script:
- ps: >-
    function Check-Error

    {
      param([int]$SuccessVal = 0)
      if ($SuccessVal -ne $LastExitCode) {
        throw "Failed with exit code $LastExitCode"
      }
    }


    if ($env:DO_TEST -eq "True"){
      $env:USE_OPENGL_MOCK = 1
      python setup.py build_ext --inplace -f
      Check-Error
      python -m nose.core kivy/tests
      Check-Error
    }